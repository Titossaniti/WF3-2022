/*
Balise sémentiques : juste le nom de la balise. virgule espace pour les accumuler sur la ligne
Classe : un point .   Et dans class=x x x pour en mettre plusieurs
Id : Un # 
*/

body{
    background-image: url(../IMG/ X backcv.webp);
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-size: cover;
}
.red {
    color: #5f1111;
}
.bold {
    font-weight: 600;
}
.background {
    background-color: #0000ff69;
}
h1 {
    font-family: 'Oswald', sans-serif;
    color: #9e5418b7;
    font-weight: 900;
}
h2 {
    font-family: 'Oswald', sans-serif;
    color: #965c11;
    font-size: 1.5em;
    font-weight: 700;
    border: solid 3.5px #965c11; 
    padding-left: 0.4em;
}
#photo {
    width: 300px;   
}

* {
    font-family: 'Oswald', sans-serif;
}

ul{
    list-style-type: none;
    padding-left: 1em;
}

.sectionalign{
    width: 100px;
    border:solid 0.5px #7c4a09;
    margin-bottom: 0.7em;
}

.tete{
    display: flex;
}

.blocalign{
    display: flex;
    flex-flow: row wrap;
}

/* On va appeler notre premier helper ! 
exemple : créé une classe text-center et l'assigné en html à toutes les balises concernés
Plutôt que de rajouter texte-center dans chaque classe*/


/* Petit point sur les conventions de nommages : 
        textCenter  : Camel case
        text-center : Kebab case
        text_center : Snake case
        TEXT_CENTER : Upper case*/

/* Les selecteurs */

*{
    
/* selectionne tous les éléments de la page */

}

.container strong {

/* Sélectionne uniquement les balises strong qui ont la classe container */

}

h1 + p {
    /* Sélectionne uniquement le PREMIER p qu'il y a APRES le h1 */    
}

p[title] {

/* Sélectionne une balise qui possède un attribut */
/* Peut aussi être plus   précis avec p[title="nom"] */

}

/* Les valeurs pour les tailles 

    On utilise les valeurs absolue uniquement si nécessaire 
    
    Valeurs relatives : %, em, rem, vw, et vh    */

/* Pour la police, google fonts, copier le code html et recup le nom css */

/* Style d'écriture */

/*  
    Gras = bold                 (font-weight)
    Italique = italic           (font-style)
    under/over.line or line     (font decoration) 
    
    right left center           (texte-align)
    border right top left...    (border(-left))
    padding = marge             (padding)
*/

/* Image de fond */

/*
XXXXX
*/

/* Les bordures */

/*
border-radius pour les angles,  1 seule valeur = 4 meme arrondis
                                4 valeurs = angles dans le sens montre
*/
.div_info {
color: #7c4a09;
box-shadow: 5px 5px 10px #5f3908bb;
font-size: 0.9em;
}

/* 
    box-shadow pour les ombres, text-shadow pour les textes
    box-shadow-inset pour que l'ombre soit à l'intérieur du bloc
*/

.Liencontact a{
    text-decoration: none;
    color: black;
}

/* Les apparences dynamiques */

    /*  Le survol
        On parle de pseudo format quand il y a -> : devant la "commande" (ex:  :hover est une pseudo classe)
        Pour le survol on utilise survol */

.Liencontact a:hover{
    text-decoration: none;
    color: black;
}

.linkcv{
    color: #7c4a09;
    text-decoration: none;

}

/*      Au clic 
        On utilise :active pour le clic*/

/*      Au focus (shift+tab)
        
        Lien visité -> :visited*/

/* Les marges */

/* Les marges internes et externes -->
        Padding, marge interieur
        Margin, marge exterieur 
Les éléments inline ont aussi des marges 
    
    Si ca dépasse du bloc, on peut utiliser overflow pour pouvoir scroll ou bien text-overflow: ellipsis pour rajouter les ... 
    Il a besoin de white-space:nowrap en amont pour fonctionner */

